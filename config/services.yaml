services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    Aria1991\AIDevAssistantBundle\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/AIDevAssistantBundle.php'

    # AI Providers with proper conditional configuration
    Aria1991\AIDevAssistantBundle\Service\Provider\OpenAIProvider:
        arguments:
            $httpClient: '@http_client'
            $apiKey: '%env(default::OPENAI_API_KEY)%'
            $model: '%ai_dev_assistant.ai.providers.openai.model%'
            $maxTokens: '%ai_dev_assistant.ai.providers.openai.max_tokens%'

    Aria1991\AIDevAssistantBundle\Service\Provider\AnthropicProvider:
        arguments:
            $httpClient: '@http_client'
            $apiKey: '%env(default::ANTHROPIC_API_KEY)%'
            $model: '%ai_dev_assistant.ai.providers.anthropic.model%'
            $maxTokens: '%ai_dev_assistant.ai.providers.anthropic.max_tokens%'

    Aria1991\AIDevAssistantBundle\Service\Provider\GoogleProvider:
        arguments:
            $httpClient: '@http_client'
            $apiKey: '%env(default::GOOGLE_AI_API_KEY)%'
            $model: '%ai_dev_assistant.ai.providers.google.model%'

    # AI Manager with provider fallback chain
    Aria1991\AIDevAssistantBundle\Service\AIManager:
        arguments:
            $providers:
                - '@Aria1991\AIDevAssistantBundle\Service\Provider\OpenAIProvider'
                - '@Aria1991\AIDevAssistantBundle\Service\Provider\AnthropicProvider'
                - '@Aria1991\AIDevAssistantBundle\Service\Provider\GoogleProvider'

    # Code Analyzers
    Aria1991\AIDevAssistantBundle\Service\Analyzer\SecurityAnalyzer: ~
    Aria1991\AIDevAssistantBundle\Service\Analyzer\PerformanceAnalyzer: ~
    Aria1991\AIDevAssistantBundle\Service\Analyzer\QualityAnalyzer: ~
    Aria1991\AIDevAssistantBundle\Service\Analyzer\DocumentationAnalyzer: ~

    # Main Code Analyzer Service
    Aria1991\AIDevAssistantBundle\Service\CodeAnalyzer:
        arguments:
            $analyzers:
                - '@Aria1991\AIDevAssistantBundle\Service\Analyzer\SecurityAnalyzer'
                - '@Aria1991\AIDevAssistantBundle\Service\Analyzer\PerformanceAnalyzer'
                - '@Aria1991\AIDevAssistantBundle\Service\Analyzer\QualityAnalyzer'
                - '@Aria1991\AIDevAssistantBundle\Service\Analyzer\DocumentationAnalyzer'
            $cacheService: '@Aria1991\AIDevAssistantBundle\Service\CacheService'

    # Cache Service
    Aria1991\AIDevAssistantBundle\Service\CacheService:
        arguments:
            $cache: '@cache.app'
            $ttl: '%ai_dev_assistant.cache.ttl%'
            $enabled: '%ai_dev_assistant.cache.enabled%'

    # Rate Limiter
    Aria1991\AIDevAssistantBundle\Service\RateLimiter:
        arguments:
            $cache: '@cache.app'

    # Commands
    Aria1991\AIDevAssistantBundle\Command\AnalyzeCodeCommand:
        tags:
            - { name: 'console.command' }

    Aria1991\AIDevAssistantBundle\Command\ConfigTestCommand:
        tags:
            - { name: 'console.command' }

    Aria1991\AIDevAssistantBundle\Command\InstallCommand:
        tags:
            - { name: 'console.command' }
    Aria1991\AIDevAssistantBundle\Service\Analyzer\DocumentationAnalyzer: ~

    # Main Code Analyzer
    Aria1991\AIDevAssistantBundle\Service\CodeAnalyzer:
        arguments:
            $analyzers:
                - '@Aria1991\AIDevAssistantBundle\Service\Analyzer\SecurityAnalyzer'
                - '@Aria1991\AIDevAssistantBundle\Service\Analyzer\PerformanceAnalyzer'
                - '@Aria1991\AIDevAssistantBundle\Service\Analyzer\QualityAnalyzer'
                - '@Aria1991\AIDevAssistantBundle\Service\Analyzer\DocumentationAnalyzer'

    # Cache Service
    Aria1991\AIDevAssistantBundle\Service\CacheService:
        arguments:
            $cache: '@cache.app'
            $enabled: '%ai_dev_assistant.cache_enabled%'
            $ttl: '%ai_dev_assistant.cache_ttl%'

    # Rate Limiter
    Aria1991\AIDevAssistantBundle\Service\RateLimiter:
        arguments:
            $cache: '@cache.app'

    # Commands
    Aria1991\AIDevAssistantBundle\Command\AnalyzeCodeCommand:
        tags:
            - { name: 'console.command' }

    Aria1991\AIDevAssistantBundle\Command\ConfigTestCommand:
        tags:
            - { name: 'console.command' }

    Aria1991\AIDevAssistantBundle\Command\InstallCommand:
        arguments:
            $projectDir: '%kernel.project_dir%'
        tags:
            - { name: 'console.command' }
