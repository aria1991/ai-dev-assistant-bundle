name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  COMPOSER_NO_INTERACTION: 1

jobs:
  validation:
    name: Code Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, dom, filter, json, curl
          tools: composer:v2
          
      - name: Validate composer files
        run: composer validate --strict --no-check-all --no-check-publish

  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: validation
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.2', '8.3']
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, xml, ctype, iconv, intl, dom, filter, json, curl
          tools: composer:v2
          
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.php-version }}-
            
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --optimize-autoloader
        
      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --no-coverage
        
      - name: Run PHPStan
        run: vendor/bin/phpstan analyse --no-progress
        
      - name: Run PHP CS Fixer
        run: vendor/bin/php-cs-fixer fix --dry-run --diff

  compatibility:
    name: Compatibility Testing
    runs-on: ubuntu-latest
    needs: validation
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.2', '8.3']
        symfony-version: ['6.4.*', '7.0.*']
        dependency-version: ['lowest', 'highest']
            
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, xml, ctype, iconv, intl, dom, filter, json, curl
          tools: composer:v2
          
      - name: Install dependencies
        run: |
          composer require symfony/framework-bundle:${{ matrix.symfony-version }} --no-update
          if [ "${{ matrix.dependency-version }}" = "lowest" ]; then
            composer update --prefer-lowest --prefer-stable --no-progress
          else
            composer update --prefer-stable --no-progress
          fi
          
      - name: Run tests
        run: vendor/bin/phpunit --no-coverage
