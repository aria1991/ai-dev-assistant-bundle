name: CI Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

env:
  COMPOSER_CACHE_DIR: ~/.composer/cache

jobs:
  quality-assurance:
    name: Code Quality
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.2', '8.3', '8.4']
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo, dom, filter, gd, json, curl
        coverage: none
        tools: composer:v2
        
    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      
    - name: Cache Composer Dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
          
    - name: Validate Composer Configuration
      run: composer validate --no-check-all
      
    - name: Install Dependencies
      run: |
        composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader
        
    - name: Code Style Check (PHP CS Fixer)
      run: |
        if [ -f vendor/bin/php-cs-fixer ]; then
          vendor/bin/php-cs-fixer fix --dry-run --diff --config=.php-cs-fixer.dist.php
        else
          echo "PHP CS Fixer not found, skipping..."
        fi
      
    - name: Static Analysis (PHPStan)
      run: |
        if [ -f vendor/bin/phpstan ]; then
          vendor/bin/phpstan analyse --memory-limit=1G --no-progress
        else
          echo "PHPStan not found, skipping..."
        fi
      
    - name: Unit Tests (PHPUnit)
      run: |
        if [ -f vendor/bin/phpunit ]; then
          vendor/bin/phpunit --colors=always --verbose
        else
          echo "PHPUnit not found, skipping..."
        fi

  security-analysis:
    name: Security Scan
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.2', '8.3', '8.4']
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        tools: composer:v2
        
    - name: Install Dependencies
      run: composer install --prefer-dist --no-progress --no-interaction
      
    - name: Symfony Security Check
      uses: symfonycorp/security-checker-action@v5
      
    - name: Dependency Vulnerability Scan
      run: composer audit --format=table || true

  package-validation:
    name: Package Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        tools: composer:v2
        
    - name: Composer Package Validation
      run: |
        composer validate --strict
        
    - name: Dependency Analysis
      run: |
        composer show --tree
        composer outdated --direct || true

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [quality-assurance]
    
    strategy:
      matrix:
        php-version: ['8.2', '8.3', '8.4']
        symfony-version: ['6.4.*', '7.0.*']
        
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo, dom, filter, gd, json, curl
        tools: composer:v2
        
    - name: Install Symfony ${{ matrix.symfony-version }}
      run: |
        composer require symfony/framework-bundle:${{ matrix.symfony-version }} --no-update --no-scripts
        composer install --prefer-dist --no-progress --no-interaction
        
    - name: Bundle Integration Test
      run: |
        php -r "
        require 'vendor/autoload.php';
        use Aria1991\AIDevAssistantBundle\AIDevAssistantBundle;
        \$bundle = new AIDevAssistantBundle();
        echo 'Bundle instantiated successfully with PHP ' . PHP_VERSION . ' and Symfony ${{ matrix.symfony-version }}: ' . get_class(\$bundle) . PHP_EOL;
        "

  success:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [quality-assurance, security-analysis, package-validation, integration-tests]
    if: success()
    
    steps:
    - name: Success
      run: |
        echo "All CI/CD checks passed successfully!"
        echo "Code Quality: PASSED"
        echo "Security: PASSED" 
        echo "Package: VALIDATED"
        echo "Integration: PASSED"
        echo ""
        echo "Ready for production deployment!"
